# 
# VirtualShock RTL V0.3.2
# By Gregorio Monari
# Based on Hennessey and Patterson dlx
# 

#---IF/DECODE---
ir<-m[pc] #if phase
a<-rs1,b<-rs2,pc<-pc+1 #decode phase

#---RTL Instructions---
#ALU type instructions
@add:r
c<-a+b
rd<-c
@sub:r
c<-a-b
rd<-c
#to add: and, xor, or, mult, ...
@addi:i
c<-a+cost
rs2<-c #uso rs2 come destinazione
@subi:i
c<-a-cost
rs2<-c
#to add: andi, xori, ori, multi, ...


#Memory type instructions 
@sw:i
mar<-a+cost
mdr<-b
m[mar]<-mdr

@lw:i
mar<-a+cost
mdr<-m[mar]
c<-mdr
rs2<-c


#Jump instructions
@jr:r
pc<-a

@j:j
pc<-pc+cost


#Branch
@beqz:i
a==0?
pc<-pc+cost

@bneqz:i
a!=0?
pc<-pc+cost


#Set condition
@seq:r
c<-a==b
rd<-c


#I/O
@in:i
mar<-a+cost #nelle slide usa b, io metto a perchè per b ho già rs2 modificato
mdr<-io[mar]
c<-mdr
rs2<-c

@out:i
mar<-a+cost
mdr<-b
io[mar]<-mdr
